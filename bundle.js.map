{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/actor.ts","src/actorType.ts","src/gbl.ts","src/main.ts","src/matchColor.ts","src/snake.ts","src/states/bootState.ts","src/states/gameState.ts","src/states/preloadState.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;ACCA,oBAA4B;AAC5B,2BAA0C,AAE1C;;IAAmB;;;AAUjB,mBAAa,AAAgB,MAAE,AAAY;AACzC,AAAK;;kHAAC,AAAI,MAAE,AAAC,GAAE,AAAC,AAAC,AAAC;;AAClB,AAAI,cAAC,AAAM,SAAG,AAAK,AAAC;AACpB,AAAI,cAAC,AAAW,YAAC,AAAI,MAAC,AAAM,AAAC,AAAC;AAC9B,AAAI,cAAC,AAAY,eAAG,IAAI,AAAM,OAAC,AAAK,AAAE,AAAC;AACvC,AAAI,cAAC,AAAM,OAAC,AAAG,IAAC,AAAG,AAAC,AAAC;AACrB,AAAI,aAAC,AAAG,IAAC,AAAQ,AAAC,AAAI,AAAC,AAAC,AAC1B;;AAAC,AAEM,AAAI;;;;6BAAE,AAAQ,GAAE,AAAQ,GAAE,AAAgB,OAAE,AAAmB,WAAE,AAAa;AACnF,AAAI,iBAAC,AAAc,eAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AAC1B,AAAI,iBAAC,AAAK,QAAG,AAAK,AAAC;AACnB,AAAI,iBAAC,AAAU,aAAG,AAAS,AAAC;AAC5B,AAAI,iBAAC,AAAW,YAAC,AAAM,AAAC,AAAC,AAC3B;AAAC,AAEM,AAAc;;;uCAAE,AAAQ,GAAE,AAAQ;AACvC,AAAI,iBAAC,AAAY,aAAC,AAAC,IAAG,AAAC,AAAC;AACxB,AAAI,iBAAC,AAAY,aAAC,AAAC,IAAG,AAAC,AAAC;AACxB,gBAAM,AAAQ,WAAgB,MAAG,IAAC,AAAW,YAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AACpD,AAAI,iBAAC,AAAC,IAAG,AAAQ,SAAC,AAAC,AAAC;AACpB,AAAI,iBAAC,AAAC,IAAG,AAAQ,SAAC,AAAC,AAAC,AACtB;AAAC,AAEM,AAAW;;;oCAAE,AAAa;AAC/B,AAAI,iBAAC,AAAS,YAAG,AAAI,KAAC,AAAe,gBAAC,AAAM,AAAC,AAAC,AAChD;AAAC,AAEM,AAAe;;;wCAAE,AAAW;AACjC,gBAAI,AAAU,aAAU,AAAI,AAAC;AAE7B,oBAAQ,AAAI,KAAC,AAAK,AAAE;AAClB,qBAAK,aAAU,WAAC,AAAI;AAClB,AAAU,kCAAI,AAAO,AAAC;AACtB,AAAM;AAER,qBAAK,aAAU,WAAC,AAAK;AACnB,AAAU,kCAAI,AAAQ,AAAC;AACvB,AAAM;AAER,qBAAK,aAAU,WAAC,AAAG;AACjB,AAAU,kCAAI,AAAM,AAAC;AACrB,AAAM;AAER,qBAAK,aAAU,WAAC,AAAM;AACpB,AAAU,kCAAI,AAAS,AAAC;AACxB,AAAM,AACT;;AAED,mBAAO,AAAU,AAAC,AACpB;AAAC,AAEF;;;;EA9D0B,AAAM,OAAC,AAAM;;AAAxC,gBA8DC;;;;;;ACjED,IAAY,AAIX;AAJD,WAAY,AAAS;AACnB,uCAAI;AACJ,uCAAI;AACJ,yCAAM,AACR;AAAC,GAJW,AAAS,YAAT,QAAS,cAAT,QAAS,YAIpB;;;;;;;;;sDCJD;;IASS,AAAM,AAAC,AAAI;;;;;;;6BAAE,AAAgB,WAAE,AAAiB,YAAE,AAAmB;AAC1E,AAAG,gBAAC,AAAS,YAAG,AAAS,AAAC;AAC1B,AAAG,gBAAC,AAAU,aAAG,AAAU,AAAC;AAE5B,AAAG,gBAAC,AAAK,QAAG,AAAM,OAAC,AAAC,IAAG,AAAS,YAAG,AAAG,IAAC,AAAQ,WAAG,AAAG,MAAG,AAAG,IAAC,AAAQ,WAAG,AAAG,AAAC;AAC3E,AAAG,gBAAC,AAAK,QAAG,AAAM,OAAC,AAAC,IAAG,AAAU,aAAG,AAAG,IAAC,AAAQ,WAAG,AAAG,MAAG,AAAG,IAAC,AAAQ,WAAG,AAAG,AAAC,AAC9E;AAAC,AAEM,AAAM,AAAC,AAAW;;;oCAAE,AAAQ,GAAE,AAAQ;AAC3C,mBAAO,IAAI,AAAM,OAAC,AAAK,MAAC,AAAG,IAAC,AAAK,QAAG,AAAC,IAAG,AAAG,IAAC,AAAQ,UAAE,AAAG,IAAC,AAAK,QAAG,AAAC,IAAG,AAAG,IAAC,AAAQ,AAAC,AAAC,AACtF;AAAC,AAEM,AAAM,AAAC,AAAW;;;oCAAE,AAAQ,GAAE,AAAQ;AAC3C,mBAAO,IAAI,AAAM,OAAC,AAAK,MAAC,AAAI,KAAC,AAAK,MAAC,CAAC,AAAC,IAAG,AAAG,IAAC,AAAK,AAAC,SAAG,AAAG,IAAC,AAAQ,AAAC,WAAE,AAAI,KAAC,AAAK,MAAC,CAAC,AAAC,IAAG,AAAG,IAAC,AAAK,AAAC,SAAG,AAAG,IAAC,AAAQ,AAAC,AAAC,AAAC,AAClH;AAAC;;;;;;AAtBsB,IAAQ,WAAU,AAAE,AAAC;AAD9C,cAwBC;;;;;;;;;;;;ACxBD,0BAA+C;AAC/C,0BAA+C;AAC/C,6BAAqD,AAErD;;IAAW;;;AAET;AACE,AAAK;;gHAAC,AAAG,KAAE,AAAG,KAAE,AAAM,OAAC,AAAI,MAAE,AAAW,AAAC,AAAC;;AAE1C,AAAI,cAAC,AAAK,MAAC,AAAG,IAAC,AAAM,QAAE,YAAS,AAAC,AAAC;AAClC,AAAI,cAAC,AAAK,MAAC,AAAG,IAAC,AAAS,WAAE,eAAY,AAAC,AAAC;AACxC,AAAI,cAAC,AAAK,MAAC,AAAG,IAAC,AAAM,QAAE,YAAS,AAAC,AAAC;AAElC,AAAI,cAAC,AAAK,MAAC,AAAK,MAAC,AAAM,AAAC,AAAC,AAE3B;;AAAC,MAAC,AAAc,AAEjB;;;;EAbkB,AAAM,OAAC,AAAI,OAa5B,AAAO;;;AAET,AAAM,OAAC,AAAM,SAAG,AAAG,AAAE;AACnB,QAAI,AAAI,AAAE,AAAC,AACb;AAAC,AAAC;;;;;;ACtBF,IAAY,AAKX;AALD,WAAY,AAAU;AACpB,yCAAI;AACJ,0CAAK;AACL,wCAAG;AACH,2CAAM,AACR;AAAC,GALW,AAAU,aAAV,QAAU,eAAV,QAAU,aAKrB;;;;;;;;;;ACLD,sBAAgC;AAChC,0BAAwC,AAIxC;;;AAUE,mBAAa,AAAe,OAAE,AAAQ,GAAE,AAAQ,GAAE,AAAa;;;AAJ9C,aAAI,OAAgB,IAAI,AAAM,OAAC,AAAK,MAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AAK1D,AAAI,aAAC,AAAM,SAAG,AAAK,AAAC;AACpB,AAAI,aAAC,AAAK,QAAG,AAAE,AAAC;AAChB,AAAI,aAAC,AAAiB,oBAAG,IAAI,AAAM,OAAC,AAAK,MAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AAEhD,aAAK,IAAI,AAAC,IAAU,AAAC,GAAE,AAAC,IAAG,AAAM,QAAE,AAAC,AAAE,KAAE;AACtC,gBAAM,AAAI,OAAS,IAAI,QAAK,MAAC,AAAK,MAAC,AAAI,MAAE,AAAS,AAAC,AAAC;AACpD,gBAAM,AAAK,QAAc,AAAI,KAAC,AAAY,AAAE,AAAC;AAC7C,gBAAI,AAAC,MAAK,AAAC,GAAE;AACX,AAAI,qBAAC,AAAI,KAAC,AAAC,GAAE,AAAC,IAAG,AAAC,GAAE,AAAK,OAAE,YAAS,UAAC,AAAI,MAAE,AAAU,AAAC,AAAC;AACvD,AAAI,qBAAC,AAAK,QAAG,AAAG,AAAC;AAClB,uBAAU,AAAC,MAAK,AAAM,SAAG,AAAC,GAAE;AAC3B,AAAI,qBAAC,AAAI,KAAC,AAAC,GAAE,AAAC,IAAG,AAAC,GAAE,AAAK,OAAE,YAAS,UAAC,AAAI,MAAE,AAAU,AAAC,AAAC;AACxD,aAFM,MAEA;AACL,AAAI,qBAAC,AAAI,KAAC,AAAC,GAAE,AAAC,IAAG,AAAC,GAAE,AAAK,OAAE,YAAS,UAAC,AAAI,MAAE,AAAa,AAAC,AAAC;AAC3D;AACD,AAAI,iBAAC,AAAK,MAAC,AAAI,KAAC,AAAI,AAAC,AAAC;AACvB,AACH;AAAC,AAEM,AAAW;;;;oCAAE,AAAyB;AAC3C,gBAAI,AAAI,KAAC,AAAe,gBAAC,AAAY,AAAC,eAAE;AACtC,AAAI,qBAAC,AAAiB,kBAAC,AAAG,IAAC,AAAY,aAAC,AAAC,GAAE,AAAY,aAAC,AAAC,AAAC,AAAC;AAC5D;AAED,gBAAM,AAAM,SAAgB,IAAI,AAAM,OAAC,AAAK,AAAE,AAAC;AAC/C,gBAAM,AAAM,SAAgB,AAAM,OAAC,AAAK,MAAC,AAAG,IAAC,AAAI,KAAC,AAAK,MAAC,AAAC,AAAC,GAAC,AAAY,cAAE,AAAI,KAAC,AAAiB,AAAC,AAAC;;;;;;AAEjG,AAAK,qCAAc,AAAI,KAAC,AAAK;AAAE,wBAApB,AAAI;;AACb,AAAM,2BAAC,AAAC,IAAG,AAAI,KAAC,AAAY,aAAC,AAAC,AAAC;AAC/B,AAAM,2BAAC,AAAC,IAAG,AAAI,KAAC,AAAY,aAAC,AAAC,AAAC;AAC/B,AAAI,yBAAC,AAAc,eAAC,AAAM,OAAC,AAAC,GAAE,AAAM,OAAC,AAAC,AAAC,AAAC;AACxC,AAAM,2BAAC,AAAC,IAAG,AAAM,OAAC,AAAC,AAAC;AACpB,AAAM,2BAAC,AAAC,IAAG,AAAM,OAAC,AAAC,AAAC;AACrB;;;;;;;;;;;;;;;;AACD,AAAI,iBAAC,AAAa,AAAE,AAAC,AACvB;AAAC,AAEM,AAAa;;;;AAClB,iBAAK,IAAI,AAAC,IAAU,AAAC,GAAE,AAAC,IAAG,AAAI,KAAC,AAAK,MAAC,AAAM,QAAE,AAAC,AAAE,KAAE;AACjD,oBAAM,AAAI,OAAS,AAAI,KAAC,AAAK,MAAC,AAAC,AAAC,AAAC;AACjC,AAAI,qBAAC,AAAU,WAAC,AAAC,GAAE,AAAI,AAAC,AAAC;AAC1B,AACH;AAAC,AAEO,AAAU;;;mCAAE,AAAY,OAAE,AAAU;AAC1C,gBAAM,AAAG,MAAgB,AAAI,KAAC,AAAK,MAAC,AAAK,AAAC,OAAC,AAAY,AAAC;AACxD,gBAAI,AAAoB,AAAC;AACzB,gBAAI,AAAoB,AAAC;AACzB,gBAAI,AAAK,UAAK,AAAC,GAAE;AACf,oBAAI,AAAI,KAAC,AAAK,MAAC,AAAM,WAAK,AAAC,GAAE;AAC3B,wBAAI,AAAI,KAAC,AAAU,eAAK,YAAS,UAAC,AAAI,MAAE;AACtC,AAAI,6BAAC,AAAW,YAAC,AAAa,AAAC,AAAC;AACjC,2BAAM;AACL,AAAI,6BAAC,AAAW,YAAC,AAAa,AAAC,AAAC;AACjC;AACF,uBAAM;AACL,AAAO,8BAAG,AAAI,KAAC,AAAK,MAAC,AAAK,QAAG,AAAC,AAAC,GAAC,AAAY,AAAC;AAC7C,wBAAI,AAAI,KAAC,AAAU,eAAK,YAAS,UAAC,AAAI,MAAE;AACtC,AAAI,6BAAC,AAAW,YAAC,AAAU,AAAC,AAAC;AAC9B,2BAAM;AACL,AAAI,6BAAC,AAAW,YAAC,AAAU,AAAC,AAAC;AAC9B;AACD,wBAAI,AAAO,QAAC,AAAC,IAAG,AAAG,IAAC,AAAC,GAAE;AACrB,AAAI,6BAAC,AAAK,QAAG,AAAG,AAAC;AAClB,+BAAU,AAAO,QAAC,AAAC,IAAG,AAAG,IAAC,AAAC,GAAE;AAC5B,AAAI,6BAAC,AAAK,QAAG,AAAE,AAAC;AACjB,qBAFM,UAEI,AAAO,QAAC,AAAC,IAAG,AAAG,IAAC,AAAC,GAAE;AAC5B,AAAI,6BAAC,AAAK,QAAG,AAAC,AAAC;AAChB,qBAFM,MAEA,IAAI,AAAO,QAAC,AAAC,IAAG,AAAG,IAAC,AAAC,GAAE;AAC5B,AAAI,6BAAC,AAAK,QAAG,AAAG,AAAC;AAClB;AACF;AACF,uBAAU,AAAK,UAAK,AAAI,KAAC,AAAK,MAAC,AAAM,SAAG,AAAC,GAAE;AAC1C,AAAO,0BAAG,AAAI,KAAC,AAAK,MAAC,AAAK,QAAG,AAAC,AAAC,GAAC,AAAY,AAAC;AAC7C,AAAI,qBAAC,AAAW,YAAC,AAAU,AAAC,AAAC;AAC7B,oBAAI,AAAO,QAAC,AAAC,IAAG,AAAG,IAAC,AAAC,GAAE;AACrB,AAAI,yBAAC,AAAK,QAAG,AAAG,AAAC;AAClB,2BAAU,AAAO,QAAC,AAAC,IAAG,AAAG,IAAC,AAAC,GAAE;AAC5B,AAAI,yBAAC,AAAK,QAAG,AAAE,AAAC;AACjB,iBAFM,UAEI,AAAO,QAAC,AAAC,IAAG,AAAG,IAAC,AAAC,GAAE;AAC5B,AAAI,yBAAC,AAAK,QAAG,AAAC,AAAC;AAChB,iBAFM,MAEA,IAAI,AAAO,QAAC,AAAC,IAAG,AAAG,IAAC,AAAC,GAAE;AAC5B,AAAI,yBAAC,AAAK,QAAG,AAAG,AAAC;AAClB;AACF,aAZM,MAYA;AACL,AAAO,0BAAG,AAAI,KAAC,AAAK,MAAC,AAAK,QAAG,AAAC,AAAC,GAAC,AAAY,AAAC;AAC7C,AAAO,0BAAG,AAAI,KAAC,AAAK,MAAC,AAAK,QAAG,AAAC,AAAC,GAAC,AAAY,AAAC;AAC7C,oBAAI,AAAO,QAAC,AAAC,MAAK,AAAO,QAAC,AAAC,GAAE;AAC3B,AAAI,yBAAC,AAAW,YAAC,AAAa,AAAC,AAAC;AAChC,AAAI,yBAAC,AAAK,QAAG,AAAE,AAAC;AACjB,2BAAU,AAAO,QAAC,AAAC,MAAK,AAAO,QAAC,AAAC,GAAE;AAClC,AAAI,yBAAC,AAAW,YAAC,AAAa,AAAC,AAAC;AAChC,AAAI,yBAAC,AAAK,QAAG,AAAC,AAAC;AAChB,iBAHM,MAGA;AACL,AAAI,yBAAC,AAAW,YAAC,AAAa,AAAC,AAAC;AAChC,wBAAK,AAAO,QAAC,AAAC,MAAK,AAAC,KAAI,AAAO,QAAC,AAAC,MAAK,AAAC,AAAC,AAAI,CAAxC,IAAyC,AAAO,QAAC,AAAC,MAAK,AAAC,KAAI,AAAO,QAAC,AAAC,MAAK,AAAC,AAAC,GAAE;AAChF,AAAI,6BAAC,AAAK,QAAG,AAAG,AAAC;AAClB,+BAAW,AAAO,QAAC,AAAC,MAAK,CAAC,AAAC,KAAI,AAAO,QAAC,AAAC,MAAK,AAAC,AAAC,AAAI,CAAzC,IAA0C,AAAO,QAAC,AAAC,MAAK,CAAC,AAAC,KAAI,AAAO,QAAC,AAAC,MAAK,AAAC,AAAC,GAAE;AACzF,AAAI,6BAAC,AAAK,QAAG,AAAC,AAAC;AAChB,qBAFM,UAEK,AAAO,QAAC,AAAC,MAAK,CAAC,AAAC,KAAI,AAAO,QAAC,AAAC,MAAK,CAAC,AAAC,AAAC,AAAI,CAA1C,IAA2C,AAAO,QAAC,AAAC,MAAK,CAAC,AAAC,KAAI,AAAO,QAAC,AAAC,MAAK,CAAC,AAAC,AAAC,GAAE;AAC3F,AAAI,6BAAC,AAAK,QAAG,AAAE,AAAC;AACjB,qBAFM,MAEA,IAAK,AAAO,QAAC,AAAC,MAAK,AAAC,KAAI,AAAO,QAAC,AAAC,MAAK,CAAC,AAAC,AAAC,AAAI,CAAzC,IAA0C,AAAO,QAAC,AAAC,MAAK,AAAC,KAAI,AAAO,QAAC,AAAC,MAAK,CAAC,AAAC,AAAC,GAAE;AACzF,AAAI,6BAAC,AAAK,QAAG,AAAG,AAAC;AAClB;AACF;AACF,AACH;AAAC,AAEO,AAAe;;;wCAAE,AAAsB;AAC7C,mBAAO,CAAC,AAAM,OAAC,AAAK,MAAC,AAAG,IAAC,AAAI,KAAC,AAAiB,mBAAE,AAAS,AAAC,WAAC,AAAM,OAAC,AAAI,KAAC,AAAI,AAAC,AAAC,AAChF;AAAC,AAEO,AAAY;;;;AAClB,gBAAM,AAAE,KAAU,AAAI,KAAC,AAAM,OAAC,AAAG,IAAC,AAAO,QAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AAChD,AAAO,oBAAC,AAAG,IAAC,AAAE,AAAC,AAAC;AAChB,mBAAO,AAAE,AAAC,AACZ;AAAC,AACF;;;;;;AAhID,gBAgIC;;;;;;;;;;;;;sDCpID;;IAAuB;;;;;;;;;;;;AAGnB,AAAI,iBAAC,AAAK,MAAC,AAAqB,wBAAG,AAAI,AAAC;AACxC,AAAI,iBAAC,AAAK,MAAC,AAAmB,sBAAG,AAAI,AAAC;AACtC,AAAI,iBAAC,AAAI,KAAC,AAAc,iBAAG,AAAI,AAAC,AAElC;AAAC,UAAC,AAAU,AAEL,AAAM;;;;;AACX,AAAI,iBAAC,AAAK,MAAC,AAAK,MAAC,AAAS,AAAC,AAAC,AAE9B;AAAC,UAAC,AAAS,AAEZ;;;;;EAd8B,AAAM,OAAC,AAAK,AAElC,AAAO,QAYd,AAAY;;;AAdd,oBAcC;;;;;;;;;;;;;;ACdD,oBAA6B;AAE7B,sBAAiC,AAEjC;;IAAuB;;;AAAvB;;;;;AAEU,cAAU,aAAU,AAAE,AAAC;AACvB,cAAW,cAAU,AAAE,AAAC;AAExB,cAAU,aAAU,AAAI,AAAC;AACzB,cAAU,aAAU,AAAC,AAAC,AA2ChC;;AArCS,AAAM,AAqCd;;;;;AApCG,kBAAG,IAAC,AAAI,KAAC,AAAI,KAAC,AAAU,YAAE,AAAI,KAAC,AAAW,aACxC,IAAI,AAAM,OAAC,AAAK,MAAC,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAO,SAAE,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAO,AAAC,AAAC,AAAC;AAEtE,gBAAM,AAAU,aAAiB,AAAI,KAAC,AAAI,KAAC,AAAG,IAAC,AAAM,OACnD,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAO,SAAE,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAO,SAAE,AAAM,AAAC,AAAC;AAC5D,AAAU,uBAAC,AAAM,OAAC,AAAG,IAAC,AAAG,AAAC,AAAC;AAE3B,AAAI,iBAAC,AAAa,gBAAG,IAAI,AAAM,OAAC,AAAK,MAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AAE5C,AAAI,iBAAC,AAAa,gBAAG,IAAI,QAAK,MAAC,AAAI,MAAE,AAAC,GAAE,AAAC,GAAE,AAAC,AAAC,AAAC,AAChD;AAAC,UAAC,AAAS,AAEJ,AAAM;;;;;AACX,gBAAI,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAQ,SAAC,AAAM,OAAC,AAAM,OAAC,AAAQ,SAAC,AAAI,AAAC,OAAE;AACzD,AAAI,qBAAC,AAAa,cAAC,AAAG,IAAC,CAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AAC/B,uBAAU,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAQ,SAAC,AAAM,OAAC,AAAM,OAAC,AAAQ,SAAC,AAAK,AAAC,QAAE;AACjE,AAAI,qBAAC,AAAa,cAAC,AAAG,IAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AAC9B,aAFM,UAEI,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAQ,SAAC,AAAM,OAAC,AAAM,OAAC,AAAQ,SAAC,AAAE,AAAC,KAAE;AAC9D,AAAI,qBAAC,AAAa,cAAC,AAAG,IAAC,AAAC,GAAE,CAAC,AAAC,AAAC,AAAC;AAC/B,aAFM,MAEA,IAAI,AAAI,KAAC,AAAI,KAAC,AAAK,MAAC,AAAQ,SAAC,AAAM,OAAC,AAAM,OAAC,AAAQ,SAAC,AAAI,AAAC,OAAE;AAChE,AAAI,qBAAC,AAAa,cAAC,AAAG,IAAC,AAAC,GAAE,AAAC,AAAC,AAAC;AAC9B;AACD,gBAAI,AAAI,KAAC,AAAU,aAAG,AAAI,KAAC,AAAU,YAAE;AACrC,AAAI,qBAAC,AAAU,cAAI,AAAI,KAAC,AAAI,KAAC,AAAI,KAAC,AAAO,AAAC;AAC3C,mBAAM;AACL,AAAI,qBAAC,AAAU,aAAG,AAAC,AAAC;AACpB,AAAkC;AAClC,AAAI,qBAAC,AAAa,cAAC,AAAW,YAAC,AAAI,KAAC,AAAa,AAAC,AAAC;AACpD,AACH;AAAC,UAAC,AAAS,AAEJ,AAAM;;;;;AACX,AAAI,iBAAC,AAAI,KAAC,AAAK,MAAC,AAAI,KAAC,AAAI,KAAC,AAAI,KAAC,AAAG,IAAC,AAAQ,AAAE,cAAI,AAAI,MAAE,AAAC,GAAE,AAAE,IAAE,AAAS,AAAC,AAAC,AAE3E;AAAC,UAAC,AAAS,AAEZ;;;;;EAjD8B,AAAM,OAAC,AAAK,QAiDzC,AAAY;;;AAjDd,oBAiDC;;;;;;;;;;;;;sDCrDD;;IAA0B;;;;;;;;;;;;AAGtB,AAAI,iBAAC,AAAI,KAAC,AAAK,MAAC,AAAM,QAAE,AAAwB,AAAC,AAAC;AAElD,AAAI,iBAAC,AAAI,KAAC,AAAc,eAAC,AAAS,WAAE,AAA2B,6BAAE,AAA4B,AAAC,AAAC,AAEjG;AAAC,UAAC,AAAU,AAEL,AAAM;;;;;AACX,AAAI,iBAAC,AAAK,MAAC,AAAK,MAAC,AAAM,AAAC,AAAC,AAE3B;AAAC,UAAC,AAAS,AAEZ;;;;;EAdiC,AAAM,OAAC,AAAK,AAErC,AAAO,QAYd,AAAe;;;AAdjB,uBAcC","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { ActorType } from './actorType';\nimport { Gbl } from './gbl';\nimport { MatchColor } from './matchColor';\n\nexport class Actor extends Phaser.Sprite {\n\n  public gridPosition:Phaser.Point;\n\n  public color:MatchColor;\n\n  public actoryType:ActorType;\n\n  private _sheet:string;\n\n  constructor (game:Phaser.Game, sheet:string) {\n    super(game, 0, 0);\n    this._sheet = sheet;\n    this.loadTexture(this._sheet);\n    this.gridPosition = new Phaser.Point();\n    this.anchor.set(0.5);\n    game.add.existing(this);\n  }\n\n  public init (x:number, y:number, color:MatchColor, actorType:ActorType, sprite:string):void {\n    this.updatePosition(x, y);\n    this.color = color;\n    this.actoryType = actorType;\n    this.updateFrame(sprite);\n  }\n\n  public updatePosition (x:number, y:number):void {\n    this.gridPosition.x = x;\n    this.gridPosition.y = y;\n    const worldPos:Phaser.Point = Gbl.gridToWorld(x, y);\n    this.x = worldPos.x;\n    this.y = worldPos.y;\n  }\n\n  public updateFrame (sprite:string):void {\n    this.frameName = this._getColorString(sprite);\n  }\n\n  public _getColorString (name:string):string {\n    let stringName:string = name;\n\n    switch (this.color) {\n      case MatchColor.BLUE:\n        stringName += '_blue';\n        break;\n\n      case MatchColor.GREEN:\n        stringName += '_green';\n        break;\n\n      case MatchColor.RED:\n        stringName += '_red';\n        break;\n\n      case MatchColor.YELLOW:\n        stringName += '_yellow';\n        break;\n    }\n\n    return stringName;\n  }\n\n}\n","\nexport enum ActorType {\n  HEAD,\n  BODY,\n  TARGET,\n}\n","\nexport class Gbl {\n  public static readonly TILESIZE:number = 24;\n  \n  public static gridWidth:number;\n  public static gridHeight:number;\n\n  private static _minX:number;\n  private static _minY:number;\n\n  public static init (gridWidth:number, gridHeight:number, center:Phaser.Point):void {\n    Gbl.gridWidth = gridWidth;\n    Gbl.gridHeight = gridHeight;\n\n    Gbl._minX = center.x - gridWidth * Gbl.TILESIZE * 0.5 + Gbl.TILESIZE * 0.5;\n    Gbl._minY = center.y - gridHeight * Gbl.TILESIZE * 0.5 + Gbl.TILESIZE * 0.5;\n  }\n\n  public static gridToWorld (x:number, y:number):Phaser.Point {\n    return new Phaser.Point(Gbl._minX + x * Gbl.TILESIZE, Gbl._minY + y * Gbl.TILESIZE);\n  }\n\n  public static worldToGrid (x:number, y:number):Phaser.Point {\n    return new Phaser.Point(Math.floor((x - Gbl._minX) / Gbl.TILESIZE), Math.floor((y - Gbl._minY) / Gbl.TILESIZE));\n  }\n}\n","\nimport { BootState } from './states/bootState';\nimport { GameState } from './states/gameState';\nimport { PreloadState } from './states/preloadState';\n\nclass Main extends Phaser.Game {\n\n  constructor () {\n    super(800, 600, Phaser.AUTO, 'container');\n\n    this.state.add('boot', BootState);\n    this.state.add('preload', PreloadState);\n    this.state.add('game', GameState);\n\n    this.state.start('boot');\n  \n  } // constructor\n\n} // Main\n\nwindow.onload = () => {\n  new Main();\n};\n","export enum MatchColor {\n  BLUE,\n  GREEN,\n  RED,\n  YELLOW,\n}\n","import { Actor } from './actor';\nimport { ActorType } from './actorType';\nimport { MatchColor } from './matchColor';\nimport { GameState } from './states/gameState';\n\nexport class Snake {\n\n  private _body:Actor[];\n\n  private _currentDirection:Phaser.Point;\n\n  private readonly ZERO:Phaser.Point = new Phaser.Point(0, 0);\n\n  private _state:GameState;\n\n  constructor (state:GameState, x:number, y:number, length:number) {\n    this._state = state;\n    this._body = [];\n    this._currentDirection = new Phaser.Point(0, 1);\n    \n    for (let i:number = 0; i < length; i++) {\n      const part:Actor = new Actor(state.game, 'sprites');\n      const color:MatchColor = this._getRndColor();\n      if (i === 0) {\n        part.init(x, y - i, color, ActorType.HEAD, 'head_end');\n        part.angle = 180;\n      } else if (i === length - 1) {\n        part.init(x, y - i, color, ActorType.BODY, 'body_end');\n      } else {\n        part.init(x, y - i, color, ActorType.BODY, 'body_middle');\n      }\n      this._body.push(part);\n    }\n  }\n\n  public updateSnake (newDirection:Phaser.Point):void {\n    if (this._validDirection(newDirection)) {\n      this._currentDirection.set(newDirection.x, newDirection.y);\n    }\n\n    const oldPos:Phaser.Point = new Phaser.Point();\n    const newPos:Phaser.Point = Phaser.Point.add(this._body[0].gridPosition, this._currentDirection);\n    \n    for (const part of this._body) {\n      oldPos.x = part.gridPosition.x;\n      oldPos.y = part.gridPosition.y;\n      part.updatePosition(newPos.x, newPos.y);\n      newPos.x = oldPos.x;\n      newPos.y = oldPos.y;\n    }\n    this.updateSprites();\n  }\n\n  public updateSprites ():void {\n    for (let i:number = 0; i < this._body.length; i++) {\n      const part:Actor = this._body[i];\n      this._setSprite(i, part);\n    }\n  }\n\n  private _setSprite (index:number, part:Actor):void {\n    const pos:Phaser.Point = this._body[index].gridPosition;\n    let nextPos:Phaser.Point;\n    let prevPos:Phaser.Point;\n    if (index === 0) {\n      if (this._body.length === 1) {\n        if (part.actoryType === ActorType.HEAD) {\n          part.updateFrame('head_single');\n        } else {\n          part.updateFrame('body_single');\n        }\n      } else {\n        nextPos = this._body[index + 1].gridPosition;\n        if (part.actoryType === ActorType.HEAD) {\n          part.updateFrame('head_end');\n        } else {\n          part.updateFrame('body_end');\n        }\n        if (nextPos.x > pos.x) {\n          part.angle = 270;\n        } else if (nextPos.x < pos.x) {\n          part.angle = 90;\n        } else if (nextPos.y > pos.y) {\n          part.angle = 0;\n        } else if (nextPos.y < pos.y) {\n          part.angle = 180;\n        }\n      }\n    } else if (index === this._body.length - 1) {\n      prevPos = this._body[index - 1].gridPosition;\n      part.updateFrame('body_end');\n      if (prevPos.x > pos.x) {\n        part.angle = 270;\n      } else if (prevPos.x < pos.x) {\n        part.angle = 90;\n      } else if (prevPos.y > pos.y) {\n        part.angle = 0;\n      } else if (prevPos.y < pos.y) {\n        part.angle = 180;\n      }\n    } else {\n      nextPos = this._body[index + 1].gridPosition;\n      prevPos = this._body[index - 1].gridPosition;\n      if (nextPos.x === prevPos.x) {\n        part.updateFrame('body_middle');\n        part.angle = 90;\n      } else if (nextPos.y === prevPos.y) {\n        part.updateFrame('body_middle');\n        part.angle = 0;\n      } else {\n        part.updateFrame('body_corner');\n        if ((nextPos.x === 1 && prevPos.y === 1) || (prevPos.x === 1 && nextPos.y === 1)) {\n          part.angle = 270;\n        } else if ((nextPos.x === -1 && prevPos.y === 1) || (prevPos.x === -1 && nextPos.y === 1)) {\n          part.angle = 0;\n        } else if ((nextPos.x === -1 && prevPos.y === -1) || (prevPos.x === -1 && nextPos.y === -1)) {\n          part.angle = 90;\n        } else if ((nextPos.x === 1 && prevPos.y === -1) || (prevPos.x === 1 && nextPos.y === -1)) {\n          part.angle = 180;\n        }\n      }\n    }\n  }\n\n  private _validDirection (direction:Phaser.Point):boolean {\n    return !Phaser.Point.add(this._currentDirection, direction).equals(this.ZERO);\n  }\n\n  private _getRndColor ():MatchColor {\n    const nr:number = this._state.rnd.between(0, 3);\n    console.log(nr);\n    return nr;\n  }\n}\n","\nexport class BootState extends Phaser.State {\n\n  public preload ():void {\n    this.scale.pageAlignHorizontally = true;\n    this.scale.pageAlignVertically = true;\n    this.time.advancedTiming = true;\n\n  } // preload\n\n  public create ():void {\n    this.state.start('preload');\n\n  } // create\n\n} // BootState\n","import { Actor } from '../actor';\nimport { Gbl } from '../gbl';\nimport { MatchColor } from '../matchColor';\nimport { Snake } from '../snake';\n\nexport class GameState extends Phaser.State {\n\n  private _gridWidth:number = 15;\n  private _gridHeight:number = 24;\n\n  private _moveDelay:number = 1000;\n  private _moveTimer:number = 0;\n\n  private _newDirection:Phaser.Point;\n\n  private _currentSnake:Snake;\n\n  public create ():void {\n    Gbl.init(this._gridWidth, this._gridHeight,\n      new Phaser.Point(this.game.world.centerX, this.game.world.centerY));\n\n    const background:Phaser.Sprite = this.game.add.sprite(\n      this.game.world.centerX, this.game.world.centerY, 'grid');\n    background.anchor.set(0.5);\n\n    this._newDirection = new Phaser.Point(0, 1);\n\n    this._currentSnake = new Snake(this, 7, 5, 5);\n  } // create\n\n  public update ():void {\n    if (this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT)) {\n      this._newDirection.set(-1, 0);\n    } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT)) {\n      this._newDirection.set(1, 0);\n    } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.UP)) {\n      this._newDirection.set(0, -1);\n    } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.DOWN)) {\n      this._newDirection.set(0, 1);\n    }\n    if (this._moveTimer < this._moveDelay) {\n      this._moveTimer += this.game.time.elapsed;\n    } else {\n      this._moveTimer = 0;\n      // console.log('move snake here');\n      this._currentSnake.updateSnake(this._newDirection);\n    }\n  } // update\n\n  public render ():void {\n    this.game.debug.text(this.time.fps.toString() || '--', 2, 14, '#00ff00');\n\n  } // render\n\n} // GameState\n","\nexport class PreloadState extends Phaser.State {\n\n  public preload ():void {\n    this.load.image('grid', 'assets/images/grid.png');\n\n    this.load.atlasJSONArray('sprites', 'assets/images/sprites.png', 'assets/images/sprites.json');\n    \n  } // preload\n\n  public create ():void {\n    this.state.start('game');\n\n  } // create\n\n} // PreloadState\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}